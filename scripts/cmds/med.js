const fs = require("fs");
const path = require("path");
const fuzzysort = require("fuzzysort");

module.exports = {
  config: {
    name: "med",
    aliases: [],
    version: "1.0",
    author: "YourName",
    description: "Search medicine info using fuzzy matching",
    usage: "<keyword>",
    category: "search",
    cooldown: 3
  },

  onStart: async function ({ message, args }) {
    if (!args[0]) return message.reply("ЁЯФН ржжрзЯрж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржорзЗржбрж┐рж╕рж┐ржи ржирж╛ржо ржмрж╛ keyword ржжрж┐ржиред");

    const query = args.join(" ").toLowerCase();
    const filePath = path.join(__dirname, 
      "alit", "med.json");

    if (!fs.existsSync(filePath)) {
      return message.reply("тЭМ med.json ржлрж╛ржЗрж▓ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред");
    }

    const data = JSON.parse(fs.readFileSync(filePath, "utf8"));

    let bestMatch = null;
    let highestScore = -Infinity;

    for (const item of data) {
      const fields = [
        item["Medicine Name"] || "",
        item["Dosage Form"] || "",
        item["Strength"] || "",
        item["Manufactur By"] || ""
      ].join(" ");

      const result = fuzzysort.single(query, fields);
      if (result && result.score > highestScore) {
        highestScore = result.score;
        bestMatch = item;
      }
    }

    if (!bestMatch) {
      return message.reply("ЁЯШУ ржХрзЛржирзЛ ржорзЗржбрж┐рж╕рж┐ржи ржорзЗрж▓рзЗржирж┐ред ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи ржЕржирзНржп ржХрзАржУрзЯрж╛рж░рзНржб ржжрж┐рзЯрзЗред");
    }

    const info = `ЁЯз╛ **ржорзЗржбрж┐рж╕рж┐ржи рждржерзНржп**

ЁЯФ╣ **ржирж╛ржо:** ${bestMatch["Medicine Name"]}
ЁЯФ╕ **ржбрзЛржЬ ржлрж░рзНржо:** ${bestMatch["Dosage Form"]}
ЁЯТК **рж╕рзНржЯрзНрж░рзЗржВрже:** ${bestMatch["Strength"]}
ЁЯПн **ржкрзНрж░рж╕рзНрждрзБрждржХрж╛рж░ржХ:** ${bestMatch["Manufactur By"]}

ЁЯУж **ржкрзНржпрж╛ржХрзЗржЯ:** ${bestMatch["Unit"] || "рждржерзНржп ржирзЗржЗ"}
ЁЯТ╡ **ржжрж╛ржо:** ${bestMatch["Per Piece"] || bestMatch["Strip Price"] || "ржЙрж▓рзНрж▓рзЗржЦ ржирзЗржЗ"}
`;

    message.reply(info);
  }
};
